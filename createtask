# a121_catch_a_turtle.py
#-----import statements-----
import turtle as trtl
import random as rand
import leaderboard as lb

#-----game configuration----
wn = trtl.Screen()
wn.setup(width=1.0, height=1.0)

font_setup = ("Arial", 20, "normal")
timer = 400
counter_interval = 1000   #1000 represents 1 second
timer_up = False

score = 0
end = 0

#leaderboard variables and lists
leaderboard_file_name="a122_leaderboard.txt"
leadernames_list = []
leader_scores_list = []
escape_tools = []
player_name=input("Please enter your name")

#-----initialize turtle-----
counter = trtl.Turtle()
click = trtl.Turtle()
writer = trtl.Turtle()

writer.penup()
writer.goto(0,0)
writer.pendown()

counter.penup()
counter.pencolor("Black")
counter.goto(-300,300)
counter.pendown

#-----game functions--------

def frontdoor():
    if (escape_tools == ['key', 'shiner', 'cloth']):
                 wn.clear()
                 wn.bgcolor('blue')
                 global end
                 end += 1
    else:
        print("Oh no! It looks like the front door is locked. Find the key to escape.")


#-----------timer------------

def countdown():
  global timer, timer_up
  counter.clear()
  if(end == 1):
        counter.write("You escaped", font=font_setup)
        global score
        score = timer
        manage_leaderboard()
  else:
        counter.write("Timer: " + str(timer), font=font_setup)
        timer -= 1
        counter.getscreen().ontimer(countdown, counter_interval) 


#---------screen clciked---------

def click_screen(x,y):
    if (x>250 and x<300):
        if (y>-100 and y<50):
          frontdoor()
    
                                     
#-------manages the leaderboard for top 5 scorers-------
def manage_leaderboard():

  global score
  global key

  # get the names and scores from the leaderboard file
  leader_names_list = lb.get_names(leaderboard_file_name)
  leader_scores_list = lb.get_scores(leaderboard_file_name)

  # show the leaderboard with or without the current player
  if (len(leader_scores_list) < 5 or score >= leader_scores_list[4]):
    lb.update_leaderboard(leaderboard_file_name, leader_names_list, leader_scores_list, player_name, score)
    lb.draw_leaderboard(True, leader_names_list, leader_scores_list,key, score)

  else:
    lb.draw_leaderboard(False, leader_names_list, leader_scores_list,key, score)
        
   
#-----events----------------

wn.ontimer(countdown, counter_interval)
wn.bgpic("frontdoor.gif")
wn.onscreenclick(click_screen)
wn.mainloop()
